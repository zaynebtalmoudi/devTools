{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  todoList: [],\n  sortCriteria: 'All'\n};\nconst todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    setTodoList: (state, action) => {\n      state.todoList = action.payload;\n    },\n    addTodo: (state, action) => {\n      state.todoList.push({\n        task: action.payload.task,\n        id: action.payload.id,\n        completed: false\n      });\n    },\n    updateTodo: (state, action) => {\n      const {\n        id,\n        task\n      } = action.payload;\n      const index = state.todoList.findIndex(todo => todo.id === id);\n    },\n    toggleCompleted: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const index = state.todoList.findIndex(todo => todo.id === id);\n      state.todoList[index].completed = !state.todoList[index].completed;\n    }\n  }\n});\nexport const {\n  setTodoList,\n  addTodo,\n  updateTodo,\n  toggleCompleted\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","todoList","sortCriteria","todoSlice","name","reducers","setTodoList","state","action","payload","addTodo","push","task","id","completed","updateTodo","index","findIndex","todo","toggleCompleted","actions","reducer"],"sources":["/Users/zayneb/Documents/GoMyCode/ChPt9-Redux/redux-todo-app/src/features/todoSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    todoList: [],\n    sortCriteria: 'All',\n};\nconst todoSlice = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n        setTodoList: (state, action) => {\n            state.todoList = action.payload;\n        },\n        addTodo: (state, action) => {\n            state.todoList.push({\n                task: action.payload.task,\n                id: action.payload.id,\n                completed: false,\n            });\n        },\n\n        updateTodo: (state, action) => {\n            const { id, task } = action.payload;\n            const index = state.todoList.findIndex((todo) => todo.id === id);\n        },\n        toggleCompleted: (state, action) => {\n            const { id } = action.payload;\n            const index = state.todoList.findIndex((todo) => todo.id === id);\n            state.todoList[index].completed = !state.todoList[index].completed\n        }\n    },\n})\nexport const { setTodoList, addTodo, updateTodo, toggleCompleted } = todoSlice.actions;\n\nexport default todoSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE;AAClB,CAAC;AACD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACN,QAAQ,CAACU,IAAI,CAAC;QAChBC,IAAI,EAAEJ,MAAM,CAACC,OAAO,CAACG,IAAI;QACzBC,EAAE,EAAEL,MAAM,CAACC,OAAO,CAACI,EAAE;QACrBC,SAAS,EAAE;MACf,CAAC,CAAC;IACN,CAAC;IAEDC,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEK,EAAE;QAAED;MAAK,CAAC,GAAGJ,MAAM,CAACC,OAAO;MACnC,MAAMO,KAAK,GAAGT,KAAK,CAACN,QAAQ,CAACgB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC;IACpE,CAAC;IACDM,eAAe,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAAEK;MAAG,CAAC,GAAGL,MAAM,CAACC,OAAO;MAC7B,MAAMO,KAAK,GAAGT,KAAK,CAACN,QAAQ,CAACgB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC;MAChEN,KAAK,CAACN,QAAQ,CAACe,KAAK,CAAC,CAACF,SAAS,GAAG,CAACP,KAAK,CAACN,QAAQ,CAACe,KAAK,CAAC,CAACF,SAAS;IACtE;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAER,WAAW;EAAEI,OAAO;EAAEK,UAAU;EAAEI;AAAgB,CAAC,GAAGhB,SAAS,CAACiB,OAAO;AAEtF,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}